# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time
import sys
import threading
from copy import copy
from math import floor
from pathlib import Path

from PyQt5 import QtCore, QtGui, QtWidgets, QtTest

from star_viewer.insta_api.json_helper import read_json

PACKAGE_PATH = Path.cwd()
DATA_PATH = PACKAGE_PATH / '..' / 'data'


def create_master_frame(window, obj_name):
    master_frame = QtWidgets.QWidget(window)
    master_frame_size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    master_frame_size_policy.setHorizontalStretch(1)
    master_frame_size_policy.setVerticalStretch(0)
    master_frame_size_policy.setHeightForWidth(master_frame.sizePolicy().hasHeightForWidth())
    master_frame.setSizePolicy(master_frame_size_policy)
    master_frame.setMinimumSize(QtCore.QSize(900, 600))
    master_frame.setObjectName(obj_name)
    master_frame_layout = create_vertical_layout(master_frame, "master_frame_layout", 5, 5, 5, 8, 5)
    return master_frame, master_frame_layout


def create_vertical_layout(frame, obj_name, margin_left, margin_top, margin_right, margin_bottom, spacing):
    v_layout = QtWidgets.QVBoxLayout(frame)
    v_layout.setContentsMargins(margin_left, margin_top, margin_right, margin_bottom)
    v_layout.setSpacing(spacing)
    v_layout.setObjectName(obj_name)
    return v_layout


def create_horizontal_layout(frame, obj_name, margin_left, margin_top, margin_right, margin_bottom, spacing):
    h_layout = QtWidgets.QHBoxLayout(frame)
    h_layout.setContentsMargins(margin_left, margin_top, margin_right, margin_bottom)
    h_layout.setSpacing(spacing)
    h_layout.setObjectName(obj_name)
    return h_layout


def create_storys_wrap(frame, obj_name):
    storys_wrap = QtWidgets.QFrame(frame)
    storys_wrap.setEnabled(True)
    storys_wrap_size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    storys_wrap_size_policy.setHorizontalStretch(1)
    storys_wrap_size_policy.setVerticalStretch(0)
    storys_wrap_size_policy.setHeightForWidth(storys_wrap.sizePolicy().hasHeightForWidth())
    storys_wrap.setSizePolicy(storys_wrap_size_policy)
    storys_wrap.setMinimumSize(QtCore.QSize(600, 120))
    storys_wrap.setMaximumSize(QtCore.QSize(16777215, 120))
    storys_wrap.setSizeIncrement(QtCore.QSize(0, 0))
    storys_wrap.setBaseSize(QtCore.QSize(0, 0))
    storys_wrap.setAutoFillBackground(False)
    storys_wrap.setFrameShape(QtWidgets.QFrame.Panel)
    storys_wrap.setFrameShadow(QtWidgets.QFrame.Sunken)
    storys_wrap.setLineWidth(0)
    storys_wrap.setObjectName(obj_name)
    storys_wrap_layout = create_horizontal_layout(storys_wrap, "story_warp_layout", 0, 0, 0, 0, 5)
    return storys_wrap, storys_wrap_layout


def create_storys_button(frame, obj_name, pix_map):
    story_button = QtWidgets.QCommandLinkButton(frame)
    story_button.setMinimumSize(QtCore.QSize(40, 120))
    story_button.setMaximumSize(QtCore.QSize(40, 120))
    story_button.setText("")
    icon = QtGui.QIcon()
    icon.addPixmap(QtGui.QPixmap(pix_map), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    story_button.setIcon(icon)
    story_button.setAutoDefault(True)
    story_button.setDefault(True)
    story_button.setDescription("")
    story_button.setObjectName(obj_name)
    return story_button


def create_storys_frame(frame, obj_name):
    storys_frame = QtWidgets.QFrame(frame)
    storys_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
    storys_frame.setFrameShadow(QtWidgets.QFrame.Raised)
    storys_frame.setObjectName("storys_frame")
    storys_frame_layout = create_horizontal_layout(storys_frame, obj_name + "_layout", 0, 0, 0, 0, 0)
    return storys_frame, storys_frame_layout


class StarViewerUi(object):
    storys = []

    def setup_ui(self, MainWindow):
        MainWindow.setObjectName("main_window")
        MainWindow.resize(200, 200)
        MainWindow.setMinimumSize(QtCore.QSize(900, 600))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))

        self.master_frame, self.master_frame_layout = create_master_frame(MainWindow, "master_frame")
        self.storys_wrap, self.storys_wrap_layout = create_storys_wrap(self.master_frame, "storys_wrap")
        self.storys_left_button = create_storys_button(self.storys_wrap, "story_left_button",
                                                       "imgs/icons8-links-30.png")
        self.storys_wrap_layout.addWidget(self.storys_left_button)
        self.storys_frame, self.storys_frame_layout = create_storys_frame(self.storys_wrap, "storys_frame")
        self.storys_wrap_layout.addWidget(self.storys_frame)
        self.storys_right_button = create_storys_button(self.storys_wrap, "story_right_button",
                                                        "imgs/icons8-pfeil-30.png")
        self.storys_wrap_layout.addWidget(self.storys_right_button)
        self.master_frame_layout.addWidget(self.storys_wrap)
        self.postings_frame = QtWidgets.QFrame(self.master_frame)
        self.postings_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.postings_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.postings_frame.setObjectName("postings_frame")
        self.master_frame_layout.addWidget(self.postings_frame)
        self.menu_frame = QtWidgets.QFrame(self.master_frame)
        self.menu_frame.setMinimumSize(QtCore.QSize(0, 120))
        self.menu_frame.setMaximumSize(QtCore.QSize(16777215, 120))
        self.menu_frame.setBaseSize(QtCore.QSize(0, 0))
        self.menu_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.menu_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.menu_frame.setObjectName("menu_frame")
        self.master_frame_layout.addWidget(self.menu_frame)
        MainWindow.setCentralWidget(self.master_frame)
        MainWindow.setCentralWidget(self.master_frame)
        self.retranslate_ui(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        return MainWindow

    def add_story(self, img_of_story, name_of_story):
        index = len(self.storys)
        x = 100 * index
        story_wrap = QtWidgets.QFrame(self.storys_frame)
        story_wrap.setGeometry(QtCore.QRect(x, 0, 105, 120))
        story_wrap.setMinimumSize(QtCore.QSize(105, 120))
        story_wrap.setMaximumSize(QtCore.QSize(105, 120))
        story_wrap.setFrameShape(QtWidgets.QFrame.NoFrame)
        story_wrap.setFrameShadow(QtWidgets.QFrame.Raised)
        story_wrap.setObjectName("story_wrap_" + str(index))
        story_img = QtWidgets.QLabel(story_wrap)
        story_img.setGeometry(QtCore.QRect(10, 10, 85, 85))
        story_img.setMinimumSize(QtCore.QSize(10, 10))
        story_img.setMaximumSize(QtCore.QSize(85, 85))
        story_img.setFrameShape(QtWidgets.QFrame.NoFrame)
        story_img.setText("")
        story_img.setPixmap(QtGui.QPixmap(img_of_story))
        story_img.setScaledContents(True)
        story_img.setWordWrap(False)
        story_img.setOpenExternalLinks(True)
        story_img.setObjectName("story_img_" + str(index))
        story_label = QtWidgets.QLabel(story_wrap)
        story_label.setGeometry(QtCore.QRect(10, 97, 85, 20))
        story_label.setMinimumSize(QtCore.QSize(85, 20))
        story_label.setMaximumSize(QtCore.QSize(85, 20))
        story_label.setScaledContents(False)
        story_label.setAlignment(QtCore.Qt.AlignCenter)
        story_label.setWordWrap(False)
        story_label.setObjectName("story_label_" + str(index))
        story_label.setText(name_of_story)
        self.storys_frame_layout.addWidget(story_wrap)
        self.storys.append(story_wrap)

    def remove_story(self):
        story_wrap = self.storys.pop(len(self.storys)-1)
        self.storys_frame_layout.removeWidget(story_wrap)

    def retranslate_ui(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("Star Viewer", "Star Viewer"))


class Window(QtWidgets.QMainWindow):
    resized = QtCore.pyqtSignal()
    ui_width = 0
    ui_height = 0
    num_of_shown_storys = 0

    def __init__(self, _real_media, parent=None):
        super(Window, self).__init__(parent=parent)
        self.ui = StarViewerUi()
        self.ui.setup_ui(self)
        self.resized.connect(self.set_frame_geometry_infos)
        self.resized.connect(self.manage_shown_storys)
        self.real_media = _real_media

    def resizeEvent(self, event):
        self.resized.emit()
        return super(Window, self).resizeEvent(event)

    def set_frame_geometry_infos(self):
        self.ui_width = self.ui.master_frame.frameGeometry().width()
        self.ui_height = self.ui.master_frame.frameGeometry().height()

    def manage_shown_storys(self):
        num_of_shown_storys_possible = floor(self.ui_width / 100 - 1)
        data_index = self.num_of_shown_storys - 1;

        if num_of_shown_storys_possible > self.num_of_shown_storys:
            for _ in range(num_of_shown_storys_possible - self.num_of_shown_storys):
                story_name = self.real_media[data_index]['user']['username']
                if len(story_name) > 12:
                    story_name = story_name[:10] + "..."
                self.ui.add_story(self.real_media[data_index]['user']['profile_pic_url'], story_name)
                data_index += 1

        if num_of_shown_storys_possible < self.num_of_shown_storys:
            for _ in range(self.num_of_shown_storys - num_of_shown_storys_possible):
                self.ui.remove_story()

        self.num_of_shown_storys = num_of_shown_storys_possible


def main():
    app = QtWidgets.QApplication(sys.argv)
    real_media = read_json(DATA_PATH / 'sorted_users_real_media.json')
    win = Window(real_media)
    win.show()

    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
